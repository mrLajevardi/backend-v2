stages:   
  - test
  - build
  - deploy

# default:
#   cache:  # Cache modules in between jobs
#     key: 
#       files:
#         - package-lock.json
#     paths:
#       - .npm/
#   before_script:
#     - npm ci --cache .npm --prefer-offline
cache:
    # most npm libraries will only have 1 entry for the base project deps
    - key: &global_cache_node_mods
          files:
              - package-lock.json
      paths:
          - node_modules/
      policy: pull

install:
  stage: .pre   # always first, no matter if it is listed in stages
  cache:
    # store npm cache for all branches (stores download pkg.tar.gz's)

    # Mimic &global_cache_node_mods config but override policy
    # to allow this job to update the cache at the end of the job
    # and only update if it was a successful job
    # NOTE: I would use yaml anchors here but overriding the policy
    # in a yaml list is not as easy as a dictionary entry (#5)
    - key: ${CI_JOB_NAME}
       # must be inside $CI_PROJECT_DIR for gitlab-runner caching (#3)
      paths:
         - .npm/
      when: on_success
      policy: pull-push

    # Mimic &global_cache_node_mods config but override policy
    # to allow this job to update the cache at the end of the job
    # and only update if it was a successful job
    # NOTE: I would use yaml anchors here but overriding the policy
    # in a yaml list is not as easy as a dictionary entry (#5)
    - key:
       files:
         - package-lock.json
      paths:
         - node_modules/
      when: on_success
      policy: pull-push
  script:
    - npm ci --cache .npm --prefer-offline

unit-test-job:   # This job runs in the test stage.
  stage: test 
  needs: []
  only:
    - develop
    - merge_requests
    - main
  script:
    - npm run test
  dependencies: []
  artifacts:
    when: always
    paths:
      - jest-junit.xml
    reports:
      junit: jest-junit.xml
    expire_in: 1 day  

lint-test-job:
  stage: test
  needs: []
  only:
    - develop
    - main
    - merge_requests
  dependencies: []
  script:
    - npm run lint
  artifacts:
    when: always
    paths:
      - eslint-junit.xml
    reports:
      junit: eslint-junit.xml
    expire_in: 1 day

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  only:
    - develop
    - main
  dependencies: []
  script:
    - .\deploy.ps1
